name: "build"
on: 
  workflow_dispatch:
permissions:
  contents: read
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    # Here we install all the tools : docker buildx, QEMU, JDK 11, JFrog CLI
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Install prerequisites
      - name: Install Node
        uses: actions/setup-node@v3
        with:
            node-version: 18
            
      - name: Setup JFrog CLI
        id: jf_cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ vars.JF_URL }}
          JF_PROJECT: guy
        with:
          oidc-provider-name: "guy-github"

      - name: Validate user output
        shell: bash
        run: test -n "${{ steps.jf_cli.outputs.oidc-user }}"

      - name: Validate token output
        shell: bash
        run: test -n "${{ steps.jf_cli.outputs.oidc-token }}"

      - name: Validate token
        shell: bash
        run: |
          jf c add testTokenConfig --url ${{ vars.JF_URL }} --user "${{ steps.jf_cli.outputs.oidc-user }}" --password "${{ steps.jf_cli.outputs.oidc-token }}"
          jf rt ping --server-id testTokenConfig        
          
      - name: Docker build and push 
        run: |
          docker login "${{ env.DOCKER_REG_SRV }}" -u ${{ steps.jf_cli.outputs.oidc-user }} -p ${{ steps.jf_cli.outputs.oidc-token }}
          jf docker build . -t ${{ vars.DOCKER_REG_SRV }}/${{ vars.DOCKER_REPO }}/${{ vars.IMAGE_NAME }}:${{ github.run_number }}
          jf docker push ${{ vars.DOCKER_REG_SRV }}/${{ vars.DOCKER_REPO }}/${{ vars.IMAGE_NAME }}:${{ github.run_number }} --build-name=${{ vars.BUILD_NAME }} --build-number=${{ github.run_number }}

      - name: Collect and Publish Build Info
        run: |
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp ${{ vars.BUILD_NAME }} $GITHUB_RUN_NUMBER 
        
      - name: Scan Build
        run: | 
          jf bs ${{ vars.BUILD_NAME }} $GITHUB_RUN_NUMBER --fail=false --vuln --format table --rescan 

          
